% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tpe_surrogate.R
\name{fit_tpe_surrogate}
\alias{fit_tpe_surrogate}
\title{Fit a Tree Parzen Estimator (TPE) Surrogate Model}
\usage{
fit_tpe_surrogate(configs, scores, gamma = 0.25, bw_factor = 1)
}
\arguments{
\item{configs}{A data frame containing the hyperparameter configurations.
Each column represents a hyperparameter.}

\item{scores}{A numeric vector of scores/losses for each configuration.
Lower scores are considered better.}

\item{gamma}{Numeric value between 0 and 1 specifying the quantile threshold
for splitting configurations into "good" and "bad" groups. Default is 0.25,
meaning the best 25\% of configurations are considered "good".}

\item{bw_factor}{Numeric value that is multiplied with KDE-bandwidths. Values
above 1 allow for more exploration of the space. Default is 1.}
}
\value{
A list containing:
\item{dens_good}{np density object for good configurations}
\item{dens_bad}{np density object for bad configurations}
\item{good_data}{Data frame of configurations classified as good}
\item{bad_data}{Data frame of configurations classified as bad}
}
\description{
Fits kernel density estimates to good and bad configurations based on
their scores, using the TPE approach for Bayesian optimization.
}
\examples{
\dontrun{
# Create example data
configs <- data.frame(
  x1 = runif(100, -5, 5),
  x2 = sample(1:10, 100, replace = TRUE),
  x3 = factor(sample(c("a", "b", "c"), 100, replace = TRUE))
)
scores <- apply(configs, 1, function(x) sum(as.numeric(x[1:2])^2))

# Fit surrogate model
surrogate <- fit_tpe_surrogate(configs, scores, gamma = 0.25)
}
}
